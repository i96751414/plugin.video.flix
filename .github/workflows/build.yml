name: build
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  create:
    tags:
      - v*

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    strategy:
      max-parallel: 5
      matrix:
        python-version: [ 3.7 ]
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint
        run: flake8

      - name: Get changelog
        id: changelog
        run: |
          printf "changelog<<EOF\n" >>"${GITHUB_OUTPUT}"
          perl -0777ne '/<news>\s*(.*?)\s*<\/news>/s && print $1' addon.xml >>"${GITHUB_OUTPUT}"
          printf "\nEOF\n" >>"${GITHUB_OUTPUT}"

  docs:
    name: Docs
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build docs
        uses: ammaraskar/sphinx-action@master
        with:
          pre-build-command: python -m pip install -r requirements.txt
          docs-folder: "docs"

      - name: Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: flix-docs-html
          path: docs/build/html

  release:
    name: Release
    runs-on: ubuntu-22.04
    needs: [ build, docs ]
    if: success() && github.event_name == 'create' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Get docs
        uses: actions/download-artifact@v4
        with:
          name: flix-docs-html
          path: flix-docs-html

      - name: Zip docs
        id: zip_docs
        run: |
          asset_name="flix-docs-html-"${{ github.ref_name }}""
          mv flix-docs-html "${asset_name}"
          zip -9 -r "${asset_name}.zip" "${asset_name}"
          echo "asset_name=${asset_name}.zip" >>"${GITHUB_OUTPUT}"

      - name: Perform release
        run: gh release create "${{ github.ref_name }}" "./${{ steps.zip_docs.outputs.asset_name }}" --repo "${{ github.repository }}" --notes "${{ needs.build.outputs.changelog }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
